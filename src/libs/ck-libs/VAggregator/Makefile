CDIR=../../../..
INCDIR=$(CDIR)/include
CHARMC=$(CDIR)/bin/charmc $(OPTS)

LIB=libmoduleVAggregator.a
LIBOBJ=VAggregator.o

HEADERS= $(INCDIR)/VAggregator.decl.h \
         $(INCDIR)/VAggregator.def.h \
         $(INCDIR)/VAggregator.h \
	 $(INCDIR)/VirtualRouter.h \
         $(INCDIR)/DataItemTypes.h
LIBDEST = $(CDIR)/lib/$(LIB)

CIFILES = VAggregator.ci

all: $(LIBDEST) $(HEADERS)

$(INCDIR)/VAggregator.decl.h: VAggregator.decl.h
	/bin/cp VAggregator.decl.h $(CDIR)/include
$(INCDIR)/VAggregator.def.h: VAggregator.def.h
	/bin/cp VAggregator.def.h $(CDIR)/include
$(INCDIR)/VAggregator.h: VAggregator.h
	/bin/cp VAggregator.h $(CDIR)/include
$(INCDIR)/VirtualRouter.h: VirtualRouter.h
	/bin/cp VirtualRouter.h $(CDIR)/include
$(INCDIR)/DataItemTypes.h: DataItemTypes.h
	/bin/cp DataItemTypes.h $(CDIR)/include

$(LIBDEST): $(LIBOBJ)
	$(CHARMC) -o $(LIBDEST) $(LIBOBJ)
	/bin/cp libmoduleVAggregator.dep $(CDIR)/lib

VAggregator.def.h: VAggregator.decl.h

VAggregator.decl.h: VAggregator.ci $(CDIR)/bin/charmxi
	$(CHARMC) -c VAggregator.ci

clean:
	-rm -fr *.o *.decl.h *.def.h core $(LIB)

include Make.depends

DEPENDFILE = Make.depends

depends:  VAggregator.ci VAggregator.def.h
	echo "Creating " $(DEPENDFILE) " ..."; 	\
	if [ -f $(DEPENDFILE) ]; then \
           /bin/cp -f $(DEPENDFILE) $(DEPENDFILE).old; \
        fi; \
	echo '#generated by make depends' > $(DEPENDFILE); \
        for i in $(LIBOBJ) ; do \
	      SRCFILE=`basename $$i .o`.C ; \
              echo "checking dependencies for $$i : $$SRCFILE" ; \
              g++ -MM -Wno-deprecated -I$(CDIR)/tmp -I../completion $$SRCFILE >> $(DEPENDFILE); \
              echo '	$$(CHARMC) -I$(CDIR)/tmp -o '$$i $$SRCFILE >> $(DEPENDFILE) ; \
        done;

